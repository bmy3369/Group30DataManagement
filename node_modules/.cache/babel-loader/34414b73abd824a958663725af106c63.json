{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brendan\\\\Desktop\\\\School Stuff\\\\SPRING2021\\\\datamangement\\\\Group30DataManagement\\\\src\\\\homePackage\\\\UserTools\\\\EditTool.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Component } from \"react/cjs/react.production.min\";\nimport React from 'react';\nimport { Label, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, ModalFooter, Button, ListGroup, ListGroupItem } from 'reactstrap';\n\nclass EditTool extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        categories: this.state.initialCategories\n      });\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.editTool = () => {\n      const data = {\n        name: this.state.wholeTool[1],\n        description: this.state.wholeTool[2],\n        purchase_date: this.state.wholeTool[3],\n        purchase_price: this.state.wholeTool[4]\n      };\n      const reqOptions = {\n        method: 'PUT',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch('/editTool/' + this.state.wholeTool[0], reqOptions).then(response => response.json());\n    };\n\n    this.addToolCategory = () => {\n      const data = {\n        dataToAdd: this.state.categories,\n        dataToRemove: this.state.categoriesToDelete\n      };\n      const reqOptions = {\n        method: 'PUT',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch('/editToolCategory/add/' + this.state.wholeTool[0], reqOptions).then(response => response.json());\n    };\n\n    this.removeToolCategory = () => {\n      const data = {\n        dataToRemove: this.state.categoriesToDelete\n      };\n      const reqOptions = {\n        method: 'PUT',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch('/editToolCategory/remove/' + this.state.wholeTool[0], reqOptions).then(response => response.json());\n    };\n\n    this.updateProp = event => {\n      const args = this.state.wholeTool;\n\n      if (event.target.id === \"enteredName\") {\n        args[1] = event.target.value;\n      } else if (event.target.id === \"enteredDescription\") {\n        args[2] = event.target.value;\n      } else if (event.target.id === \"enteredPurchaseDate\") {\n        args[3] = event.target.value;\n      } else if (event.target.id === \"enteredPurchasePrice\") {\n        args[4] = event.target.value;\n      }\n\n      this.setState({\n        wholeTool: args\n      });\n    };\n\n    this.updateUserInput = event => {\n      this.setState({\n        inputCategory: event.target.value\n      });\n    };\n\n    this.submitForm = () => {\n      let cats = this.state.categories;\n\n      for (let i = 0; i < cats.length; i++) {\n        if (cats[i][1] === undefined) {\n          cats.splice(i, 1);\n          i--;\n        }\n      }\n\n      this.setState({\n        categories: cats\n      });\n      this.editTool();\n      this.addToolCategory();\n      this.removeToolCategory();\n      this.toggle();\n    };\n\n    this.removeCategory = event => {\n      let cats = this.state.categories;\n\n      for (let i = 0; i < cats.length; i++) {\n        let str = cats[i][0];\n        let eve = event.target.value;\n\n        if (str === eve) {\n          if (cats[i][1] !== null) {\n            let newList = this.state.categoriesToDelete;\n            newList.push(cats[i][0]);\n            this.setState({\n              categoriesToDelete: newList\n            });\n          }\n\n          cats.splice(i, 1);\n        }\n      }\n\n      this.setState({\n        categories: cats\n      });\n    };\n\n    this.displayCategories = category => {\n      return /*#__PURE__*/_jsxDEV(Label, {\n        children: [category, /*#__PURE__*/_jsxDEV(Button, {\n          value: category,\n          onClick: this.removeCategory,\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 14\n      }, this);\n    };\n\n    this.addCategory = () => {\n      let cats = this.state.categories;\n      cats.push([this.state.inputCategory, false]);\n      this.setState({\n        categories: cats\n      });\n    };\n\n    this.updateCategories = list => {\n      if (list !== null) {\n        this.setState({\n          initialCategories: list\n        });\n      }\n    };\n\n    this.state = {\n      wholeTool: props.tool,\n      initialCategories: props.categories,\n      categories: [],\n      categoriesToDelete: [],\n      modal: false,\n      inputCategory: \"\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"MOUNTING\");\n    fetch('/getToolCategories/' + this.state.wholeTool[0]).then(response => response.json()).then(jsonOutput => {\n      this.updateCategories(jsonOutput);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"m-2\",\n        color: \"primary\",\n        onClick: this.toggle,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.toggle,\n          children: \"Create New Tool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          className: \"m-4\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Tool Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"enteredName\",\n                value: this.state.wholeTool[1],\n                onChange: this.updateProp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"enteredDescription\",\n                value: this.state.wholeTool[2],\n                onChange: this.updateProp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Purchase Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"enteredPurchaseDate\",\n                value: this.state.wholeTool[3],\n                onChange: this.updateProp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Purchase Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"enteredPurchasePrice\",\n                value: this.state.wholeTool[4],\n                onChange: this.updateProp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Categories:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                children: [this.state.categories.map(category => this.displayCategories(category)), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  id: \"inputText\",\n                  value: this.state.inputCategory,\n                  onChange: this.updateUserInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: this.addCategory,\n                  children: \"Add Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: this.submitForm,\n            children: \"Confirm Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EditTool;","map":{"version":3,"sources":["C:/Users/Brendan/Desktop/School Stuff/SPRING2021/datamangement/Group30DataManagement/src/homePackage/UserTools/EditTool.js"],"names":["Component","React","Label","Modal","ModalHeader","ModalBody","Form","FormGroup","Input","ModalFooter","Button","ListGroup","ListGroupItem","EditTool","constructor","props","toggle","setState","categories","state","initialCategories","modal","editTool","data","name","wholeTool","description","purchase_date","purchase_price","reqOptions","method","headers","Accept","body","JSON","stringify","fetch","then","response","json","addToolCategory","dataToAdd","dataToRemove","categoriesToDelete","removeToolCategory","updateProp","event","args","target","id","value","updateUserInput","inputCategory","submitForm","cats","i","length","undefined","splice","removeCategory","str","eve","newList","push","displayCategories","category","addCategory","updateCategories","list","tool","componentDidMount","console","log","jsonOutput","render","map"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Component} from \"react/cjs/react.production.min\";\r\nimport React from 'react'\r\nimport {\r\nLabel, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, ModalFooter, Button, ListGroup, ListGroupItem\r\n} from 'reactstrap'\r\n\r\nclass EditTool extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            wholeTool: props.tool,\r\n            initialCategories: props.categories,\r\n            categories: [],\r\n            categoriesToDelete: [],\r\n            modal: false,\r\n            inputCategory: \"\"\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({categories: this.state.initialCategories})\r\n        this.setState({modal: !this.state.modal});\r\n    }\r\n\r\n    editTool = () => {\r\n        const data = {\r\n            name: this.state.wholeTool[1],\r\n            description: this.state.wholeTool[2],\r\n            purchase_date: this.state.wholeTool[3],\r\n            purchase_price: this.state.wholeTool[4],\r\n        }\r\n        const reqOptions = {\r\n            method: 'PUT',\r\n            headers: {Accept:'application/json', 'Content-Type':'application/json'},\r\n            body: JSON.stringify(data)\r\n        }\r\n        fetch('/editTool/' +this.state.wholeTool[0], reqOptions)\r\n            .then(response => response.json())\r\n    }\r\n\r\n    addToolCategory = () => {\r\n        const data = {\r\n            dataToAdd: this.state.categories,\r\n            dataToRemove: this.state.categoriesToDelete\r\n        }\r\n        const reqOptions = {\r\n            method: 'PUT',\r\n            headers: {Accept:'application/json', 'Content-Type':'application/json'},\r\n            body: JSON.stringify(data)\r\n        }\r\n         fetch('/editToolCategory/add/' +this.state.wholeTool[0], reqOptions)\r\n            .then(response => response.json())\r\n\r\n    }\r\n    removeToolCategory = () => {\r\n        const data = {\r\n            dataToRemove: this.state.categoriesToDelete\r\n        }\r\n        const reqOptions = {\r\n            method: 'PUT',\r\n            headers: {Accept:'application/json', 'Content-Type':'application/json'},\r\n            body: JSON.stringify(data)\r\n        }\r\n         fetch('/editToolCategory/remove/' +this.state.wholeTool[0], reqOptions)\r\n            .then(response => response.json())\r\n\r\n    }\r\n\r\n\r\n\r\n    updateProp = (event) => {\r\n        const args = this.state.wholeTool\r\n        if(event.target.id === \"enteredName\") {\r\n            args[1] = event.target.value\r\n        } else if(event.target.id === \"enteredDescription\") {\r\n             args[2] = event.target.value\r\n        }else if(event.target.id === \"enteredPurchaseDate\") {\r\n             args[3] = event.target.value\r\n        }else if(event.target.id === \"enteredPurchasePrice\") {\r\n             args[4] = event.target.value\r\n        }\r\n        this.setState({wholeTool: args})\r\n    }\r\n\r\n    updateUserInput = (event) => {\r\n        this.setState({inputCategory: event.target.value})\r\n    }\r\n\r\n    submitForm = () => {\r\n        let cats = this.state.categories\r\n        for (let i=0; i < cats.length; i++) {\r\n            if (cats[i][1] === undefined) {\r\n                cats.splice(i, 1)\r\n                i--;\r\n            }\r\n        }\r\n        this.setState({categories: cats})\r\n\r\n        this.editTool()\r\n\r\n        this.addToolCategory()\r\n        this.removeToolCategory()\r\n\r\n        this.toggle()\r\n    }\r\n\r\n    removeCategory = (event) => {\r\n        let cats = this.state.categories\r\n        for(let i=0; i < cats.length; i++) {\r\n            let str = cats[i][0]\r\n            let eve = event.target.value\r\n            if (str === eve) {\r\n                if (cats[i][1] !== null) {\r\n                    let newList = this.state.categoriesToDelete\r\n                    newList.push(cats[i][0])\r\n\r\n                    this.setState({categoriesToDelete: newList})\r\n                }\r\n                cats.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({categories: cats})\r\n    }\r\n\r\n    displayCategories = (category) => {\r\n        return (\r\n             <Label>{category}\r\n                <Button value={category} onClick={this.removeCategory}>Remove</Button>\r\n             </Label>\r\n        )\r\n    }\r\n\r\n    addCategory = () => {\r\n        let cats = this.state.categories\r\n        cats.push([this.state.inputCategory, false])\r\n        this.setState({categories: cats})\r\n    }\r\n\r\n    updateCategories = (list) => {\r\n        if (list !== null) {\r\n            this.setState({initialCategories: list})\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        console.log(\"MOUNTING\")\r\n        fetch('/getToolCategories/' +this.state.wholeTool[0])\r\n            .then(\r\n                response => response.json()\r\n            ).then(jsonOutput => {\r\n                this.updateCategories(jsonOutput)\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button className=\"m-2\" color=\"primary\" onClick={this.toggle}>Edit</Button>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>Create New Tool</ModalHeader>\r\n                    <ModalBody className={\"m-4\"}>\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <Label>Tool Name</Label>\r\n                                <Input type=\"text\" id=\"enteredName\" value={this.state.wholeTool[1]} onChange={this.updateProp}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Description</Label>\r\n                                <Input type=\"text\" id=\"enteredDescription\" value={this.state.wholeTool[2]} onChange={this.updateProp}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Purchase Date</Label>\r\n                                <Input type=\"text\" id=\"enteredPurchaseDate\" value={this.state.wholeTool[3]} onChange={this.updateProp}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Purchase Price</Label>\r\n                                <Input type=\"text\" id=\"enteredPurchasePrice\" value={this.state.wholeTool[4]} onChange={this.updateProp}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Categories:</Label>\r\n                                 <ListGroup>\r\n                                    {this.state.categories.map(category => this.displayCategories(category))}\r\n                                    <Input type=\"text\" id=\"inputText\" value={this.state.inputCategory} onChange={this.updateUserInput}/>\r\n                                    <Button onClick={this.addCategory}>Add Category</Button>\r\n                                </ListGroup>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.submitForm}>Confirm Edit</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default EditTool\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}