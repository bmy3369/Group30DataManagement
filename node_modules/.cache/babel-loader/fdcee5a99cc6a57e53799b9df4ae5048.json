{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brendan\\\\Desktop\\\\School Stuff\\\\SPRING2021\\\\datamangement\\\\Group30DataManagement\\\\src\\\\homePackage\\\\UserTools\\\\EditTool.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Component } from \"react/cjs/react.production.min\";\nimport React from 'react';\nimport { Label, Modal, ModalHeader, ModalBody, Form, FormGroup, NavLink, Input, ModalFooter, Button } from 'reactstrap';\n\nclass EditTool extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.editTool = () => {\n      const data = {\n        barcode: this.state.wholeTool[0],\n        name: this.state.wholeTool[1],\n        description: this.state.wholeTool[2],\n        purchase_date: this.state.wholeTool[3],\n        purchase_price: this.state.wholeTool[4]\n      };\n      const reqOptions = {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch('/createTool/', reqOptions).then(response => response.json()).then(this.fetchData);\n      this.updateTool();\n    };\n\n    this.updateTool = () => {\n      this.props.updateTable();\n    };\n\n    this.updateProp = event => {\n      const args = this.state.wholeTool;\n\n      if (event.target.id === \"enteredName\") {\n        args[1] = event.target.value;\n      } else if (event.target.id === \"enteredDescription\") {\n        args[2] = event.target.value;\n      } else if (event.target.id === \"enteredPurchaseDate\") {\n        args[3] = event.target.value;\n      } else if (event.target.id === \"enteredPurchasePrice\") {\n        args[4] = event.target.value;\n      }\n\n      this.setState({\n        wholeTool: args\n      });\n    };\n\n    this.submitForm = () => {\n      this.createTool();\n      this.toggle();\n    };\n\n    this.state = {\n      wholeTool: props.tool,\n      modal: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"m-2\",\n        color: \"primary\",\n        onClick: this.toggle,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.toggle,\n          children: \"Create New Tool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          className: \"m-4\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Tool Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"enteredName\",\n                value: this.state.wholeTool[1],\n                onChange: this.updateProp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"enteredDescription\",\n                value: this.state.wholeTool[2],\n                onChange: this.updateProp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Purchase Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"enteredPurchaseDate\",\n                value: this.state.wholeTool[3],\n                onChange: this.updateProp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Purchase Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"enteredPurchasePrice\",\n                value: this.state.wholeTool[4],\n                onChange: this.updateProp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: this.submitForm,\n            children: \"Confirm Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EditTool;","map":{"version":3,"sources":["C:/Users/Brendan/Desktop/School Stuff/SPRING2021/datamangement/Group30DataManagement/src/homePackage/UserTools/EditTool.js"],"names":["Component","React","Label","Modal","ModalHeader","ModalBody","Form","FormGroup","NavLink","Input","ModalFooter","Button","EditTool","constructor","props","toggle","setState","modal","state","editTool","data","barcode","wholeTool","name","description","purchase_date","purchase_price","reqOptions","method","headers","Accept","body","JSON","stringify","fetch","then","response","json","fetchData","updateTool","updateTable","updateProp","event","args","target","id","value","submitForm","createTool","tool","render"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Component} from \"react/cjs/react.production.min\";\r\nimport React from 'react'\r\nimport {\r\nLabel, Modal, ModalHeader, ModalBody, Form, FormGroup,NavLink, Input, ModalFooter, Button\r\n} from 'reactstrap'\r\n\r\nclass EditTool extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            wholeTool: props.tool,\r\n            modal: false,\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({modal: !this.state.modal});\r\n\r\n    }\r\n\r\n    editTool = () => {\r\n        const data = {\r\n            barcode: this.state.wholeTool[0],\r\n            name: this.state.wholeTool[1],\r\n            description: this.state.wholeTool[2],\r\n            purchase_date: this.state.wholeTool[3],\r\n            purchase_price: this.state.wholeTool[4],\r\n        }\r\n        const reqOptions = {\r\n            method: 'POST',\r\n            headers: {Accept:'application/json', 'Content-Type':'application/json'},\r\n            body: JSON.stringify(data)\r\n        }\r\n        fetch('/createTool/', reqOptions)\r\n            .then(response => response.json())\r\n            .then(\r\n                this.fetchData\r\n            )\r\n        this.updateTool()\r\n    }\r\n    updateTool = () => {\r\n        this.props.updateTable()\r\n    }\r\n\r\n    updateProp = (event) => {\r\n        const args = this.state.wholeTool\r\n        if(event.target.id === \"enteredName\") {\r\n            args[1] = event.target.value\r\n        } else if(event.target.id === \"enteredDescription\") {\r\n             args[2] = event.target.value\r\n        }else if(event.target.id === \"enteredPurchaseDate\") {\r\n             args[3] = event.target.value\r\n        }else if(event.target.id === \"enteredPurchasePrice\") {\r\n             args[4] = event.target.value\r\n        }\r\n        this.setState({wholeTool: args})\r\n    }\r\n    submitForm = () => {\r\n        this.createTool()\r\n        this.toggle()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button className=\"m-2\" color=\"primary\" onClick={this.toggle}>Edit</Button>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>Create New Tool</ModalHeader>\r\n                    <ModalBody className={\"m-4\"}>\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <Label>Tool Name</Label>\r\n                                <Input type=\"text\" id=\"enteredName\" value={this.state.wholeTool[1]} onChange={this.updateProp}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Description</Label>\r\n                                <Input type=\"text\" id=\"enteredDescription\" value={this.state.wholeTool[2]} onChange={this.updateProp}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Purchase Date</Label>\r\n                                <Input type=\"text\" id=\"enteredPurchaseDate\" value={this.state.wholeTool[3]} onChange={this.updateProp}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Purchase Price</Label>\r\n                                <Input type=\"text\" id=\"enteredPurchasePrice\" value={this.state.wholeTool[4]} onChange={this.updateProp}/>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.submitForm}>Confirm Edit</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default EditTool\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}