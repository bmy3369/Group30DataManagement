{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brendan\\\\Desktop\\\\School Stuff\\\\SPRING2021\\\\datamangement\\\\Group30DataManagement\\\\src\\\\homePackage\\\\UserTools\\\\AddTool.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Component } from \"react/cjs/react.production.min\";\nimport React from 'react';\nimport { Label, Modal, ModalHeader, ModalBody, Form, FormGroup, NavLink, Input, ModalFooter, Button, ListGroup } from 'reactstrap';\n\nclass AddTool extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n\n      if (this.state.modal === false) {\n        this.setState({\n          tool_name: \"\"\n        });\n        this.setState({\n          description: \"\"\n        });\n        this.setState({\n          purchase_date: \"\"\n        });\n        this.setState({\n          purchase_price: \"\"\n        });\n        this.setState({\n          shareable: false\n        });\n      }\n    };\n\n    this.getToolBarcode = () => {\n      fetch('/getLastTool/' + this.state.owner).then(response => response.json()).then(jsonOutput => this.addToolCategory(jsonOutput));\n    };\n\n    this.createTool = () => {\n      const data = {\n        name: this.state.tool_name,\n        description: this.state.description,\n        purchase_date: this.state.purchase_date,\n        purchase_price: this.state.purchase_price,\n        shareable: this.state.shareable,\n        owner: this.state.owner\n      };\n      const reqOptions = {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch('/createTool/', reqOptions).then(response => response.json()).then(this.getToolBarcode);\n    };\n\n    this.addToolCategory = barcode => {\n      console.log(this.state.categories);\n\n      for (let i = 0; i < this.state.categories.length; i++) {\n        let addMe = this.state.categories[i];\n        const reqOptions = {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          }\n        };\n        fetch('/addToolCategory/' + barcode + \"/\" + addMe, reqOptions).then(response => response.json());\n      }\n    };\n\n    this.addCategory = () => {\n      let cats = this.state.categories;\n      cats.push(this.state.inputCategory);\n      this.setState({\n        categories: cats\n      });\n    };\n\n    this.removeCategory = event => {\n      let cats = this.state.categories;\n\n      for (let i = 0; i < cats.length; i++) {\n        let str = cats[i];\n        let eve = event.target.value;\n\n        if (str === eve) {\n          cats.splice(i, 1);\n        }\n      }\n\n      this.setState({\n        categories: cats\n      });\n    };\n\n    this.displayCategories = category => {\n      return /*#__PURE__*/_jsxDEV(Label, {\n        children: [category, /*#__PURE__*/_jsxDEV(Button, {\n          value: category,\n          onClick: this.removeCategory,\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 14\n      }, this);\n    };\n\n    this.updateProp = event => {\n      if (event.target.id === \"enteredName\") {\n        this.setState({\n          tool_name: event.target.value\n        });\n      } else if (event.target.id === \"enteredDescription\") {\n        this.setState({\n          description: event.target.value\n        });\n      } else if (event.target.id === \"enteredPurchaseDate\") {\n        this.setState({\n          purchase_date: event.target.value\n        });\n      } else if (event.target.id === \"enteredPurchasePrice\") {\n        this.setState({\n          purchase_price: event.target.value\n        });\n      } else if (event.target.id === \"enteredShareable\") {\n        this.setState({\n          shareable: event.target.value\n        });\n      }\n    };\n\n    this.updateUserInput = event => {\n      this.setState({\n        inputCategory: event.target.value\n      });\n    };\n\n    this.submitForm = () => {\n      this.createTool();\n      this.toggle();\n    };\n\n    this.state = {\n      barcode: \"\",\n      tool_name: \"\",\n      description: \"\",\n      purchase_date: \"\",\n      purchase_price: \"\",\n      shareable: true,\n      categories: [],\n      inputCategory: \"\",\n      owner: props.user,\n      modal: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"m-2\",\n        color: \"primary\",\n        onClick: this.toggle,\n        children: \"+ New Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.toggle,\n          children: \"Create New Tool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          className: \"m-4\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Tool Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"enteredName\",\n                value: this.state.tool_name,\n                onChange: this.updateProp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"enteredDescription\",\n                value: this.state.description,\n                onChange: this.updateProp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Purchase Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"enteredPurchaseDate\",\n                value: this.state.purchase_date,\n                onChange: this.updateProp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Purchase Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"enteredPurchasePrice\",\n                value: this.state.purchase_price,\n                onChange: this.updateProp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Shareable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"checkbox\",\n                id: \"enteredShareable\",\n                checked: this.state.shareable,\n                onChange: this.updateProp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Categories:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                children: [this.state.categories.map(category => this.displayCategories(category)), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  id: \"inputText\",\n                  value: this.state.inputCategory,\n                  onChange: this.updateUserInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: this.addCategory,\n                  children: \"Add Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: this.submitForm,\n            children: \"Create Tool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddTool;","map":{"version":3,"sources":["C:/Users/Brendan/Desktop/School Stuff/SPRING2021/datamangement/Group30DataManagement/src/homePackage/UserTools/AddTool.js"],"names":["Component","React","Label","Modal","ModalHeader","ModalBody","Form","FormGroup","NavLink","Input","ModalFooter","Button","ListGroup","AddTool","constructor","props","toggle","setState","modal","state","tool_name","description","purchase_date","purchase_price","shareable","getToolBarcode","fetch","owner","then","response","json","jsonOutput","addToolCategory","createTool","data","name","reqOptions","method","headers","Accept","body","JSON","stringify","barcode","console","log","categories","i","length","addMe","addCategory","cats","push","inputCategory","removeCategory","event","str","eve","target","value","splice","displayCategories","category","updateProp","id","updateUserInput","submitForm","user","render","map"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Component} from \"react/cjs/react.production.min\";\r\nimport React from 'react'\r\nimport {\r\n    Label, Modal, ModalHeader, ModalBody, Form, FormGroup, NavLink, Input, ModalFooter, Button, ListGroup\r\n} from 'reactstrap'\r\n\r\nclass AddTool extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            barcode: \"\",\r\n            tool_name: \"\",\r\n            description: \"\",\r\n            purchase_date: \"\",\r\n            purchase_price: \"\",\r\n            shareable: true,\r\n            categories: [],\r\n            inputCategory: \"\",\r\n            owner: props.user,\r\n            modal: false,\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({modal: !this.state.modal});\r\n        if (this.state.modal === false) {\r\n            this.setState({tool_name: \"\"})\r\n             this.setState({description: \"\"})\r\n             this.setState({purchase_date: \"\"})\r\n             this.setState({purchase_price: \"\"})\r\n             this.setState({shareable: false})\r\n        }\r\n    }\r\n\r\n    getToolBarcode = () => {\r\n        fetch('/getLastTool/' +this.state.owner)\r\n            .then(response => response.json())\r\n            .then(jsonOutput =>\r\n            this.addToolCategory(jsonOutput))\r\n    }\r\n\r\n    createTool = () => {\r\n        const data = {\r\n            name: this.state.tool_name,\r\n            description: this.state.description,\r\n            purchase_date: this.state.purchase_date,\r\n            purchase_price: this.state.purchase_price,\r\n            shareable: this.state.shareable,\r\n            owner: this.state.owner\r\n        }\r\n        const reqOptions = {\r\n            method: 'POST',\r\n            headers: {Accept:'application/json', 'Content-Type':'application/json'},\r\n            body: JSON.stringify(data)\r\n        }\r\n        fetch('/createTool/', reqOptions)\r\n            .then(response => response.json())\r\n            .then(\r\n                this.getToolBarcode\r\n            )\r\n    }\r\n    addToolCategory = (barcode) => {\r\n        console.log(this.state.categories)\r\n        for (let i=0; i < this.state.categories.length; i++) {\r\n            let addMe = this.state.categories[i]\r\n            const reqOptions = {\r\n                method: 'POST',\r\n                headers: {Accept: 'application/json', 'Content-Type': 'application/json'},\r\n            }\r\n            fetch('/addToolCategory/' + barcode +\"/\" +addMe, reqOptions)\r\n                .then(response => response.json())\r\n        }\r\n    }\r\n    addCategory = () => {\r\n        let cats = this.state.categories\r\n        cats.push(this.state.inputCategory)\r\n        this.setState({categories: cats})\r\n    }\r\n    removeCategory = (event) => {\r\n        let cats = this.state.categories\r\n        for(let i=0; i < cats.length; i++) {\r\n            let str = cats[i]\r\n            let eve = event.target.value\r\n            if (str === eve) {\r\n                cats.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({categories: cats})\r\n    }\r\n\r\n    displayCategories = (category) => {\r\n        return (\r\n             <Label>{category}\r\n                <Button value={category} onClick={this.removeCategory}>Remove</Button>\r\n             </Label>\r\n        )\r\n    }\r\n    updateProp = (event) => {\r\n        if(event.target.id === \"enteredName\") {\r\n            this.setState({tool_name: event.target.value})\r\n        } else if(event.target.id === \"enteredDescription\") {\r\n            this.setState({description: event.target.value})\r\n        }else if(event.target.id === \"enteredPurchaseDate\") {\r\n            this.setState({purchase_date: event.target.value})\r\n        }else if(event.target.id === \"enteredPurchasePrice\") {\r\n            this.setState({purchase_price: event.target.value})\r\n        }else if(event.target.id === \"enteredShareable\") {\r\n            this.setState({shareable: event.target.value})\r\n        }\r\n    }\r\n    updateUserInput = (event) => {\r\n         this.setState({inputCategory: event.target.value})\r\n    }\r\n    submitForm = () => {\r\n        this.createTool()\r\n        this.toggle()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button className=\"m-2\" color=\"primary\" onClick={this.toggle}>+ New Tool</Button>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>Create New Tool</ModalHeader>\r\n                    <ModalBody className={\"m-4\"}>\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <Label>Tool Name</Label>\r\n                                <Input type=\"text\" id=\"enteredName\" value={this.state.tool_name} onChange={this.updateProp}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Description</Label>\r\n                                <Input type=\"text\" id=\"enteredDescription\" value={this.state.description} onChange={this.updateProp}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Purchase Date</Label>\r\n                                <Input type=\"text\" id=\"enteredPurchaseDate\" value={this.state.purchase_date} onChange={this.updateProp}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Purchase Price</Label>\r\n                                <Input type=\"text\" id=\"enteredPurchasePrice\" value={this.state.purchase_price} onChange={this.updateProp}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Shareable</Label>\r\n                                <Input type=\"checkbox\" id=\"enteredShareable\" checked={this.state.shareable} onChange={this.updateProp}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Categories:</Label>\r\n                                 <ListGroup>\r\n                                    {this.state.categories.map(category => this.displayCategories(category))}\r\n                                    <Input type=\"text\" id=\"inputText\" value={this.state.inputCategory} onChange={this.updateUserInput}/>\r\n                                    <Button onClick={this.addCategory}>Add Category</Button>\r\n                                </ListGroup>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.submitForm}>Create Tool</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default AddTool\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}