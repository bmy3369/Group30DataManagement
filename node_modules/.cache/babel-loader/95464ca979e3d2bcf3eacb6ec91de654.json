{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brendan\\\\Desktop\\\\SWEN344\\\\react-3-bmy3369\\\\src\\\\mycomponent.js\";\nimport React, { Component } from 'react';\n\nclass MyComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateData = apiResponse => {\n      this.setState({\n        data: apiResponse\n      });\n    };\n\n    this.fetchData = () => {\n      //In package.json add \"proxy\": \"http://localhost:5000\" \n      //This will allow redirect to REST api in Flask w/o CORS errors\n      fetch('/example_api').then(response => response.json()) //The promise response is returned, then we extract the json data\n      .then(jsonOutput => //jsonOutput now has result of the data extraction\n      {\n        this.updateData(jsonOutput);\n      });\n    };\n\n    this.state = {\n      data: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    {\n      /*If the data has not yet been loaded from the server, return empty page */\n    }\n    if (this.state.data == null) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this);else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"The api response is: \", this.state.data]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\n\nexport default MyComponent;","map":{"version":3,"sources":["C:/Users/Brendan/Desktop/SWEN344/react-3-bmy3369/src/mycomponent.js"],"names":["React","Component","MyComponent","constructor","props","updateData","apiResponse","setState","data","fetchData","fetch","then","response","json","jsonOutput","state","componentDidMount","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,WAAN,SAA0BD,SAA1B,CAAmC;AAC/BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAKlBC,UALkB,GAKJC,WAAD,IAAiB;AAC1B,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAEF;AAAP,OAAd;AACH,KAPiB;;AAAA,SASlBG,SATkB,GASN,MAAM;AACd;AACA;AACCC,MAAAA,KAAK,CAAC,cAAD,CAAL,CACCC,IADD,CAEIC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFhB,EAGK;AAHL,OAICF,IAJD,CAIOG,UAAU,IAAI;AACZ;AACI,aAAKT,UAAL,CAAgBS,UAAhB;AACD,OAPZ;AASF,KArBe;;AAEd,SAAKC,KAAL,GAAW;AAACP,MAAAA,IAAI,EAAE;AAAP,KAAX;AACH;;AAmBDQ,EAAAA,iBAAiB,GAAE;AACf,SAAKP,SAAL;AACH;;AAGDQ,EAAAA,MAAM,GAAE;AACJ;AAAC;AAA4E;AAC7E,QAAK,KAAKF,KAAL,CAAWP,IAAX,IAAmB,IAAxB,EACA,oBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR,CADA,KAGA;AAEA,0BACI;AAAA,+BACI;AAAA,iCAAK;AAAA,gDAA0B,KAAKO,KAAL,CAAWP,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAMC;AACJ;;AA1C8B;;AA6CnC,eAAeN,WAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass MyComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={data: \"\"}\r\n    }\r\n\r\n    updateData = (apiResponse) => {\r\n        this.setState({data: apiResponse})\r\n    }\r\n\r\n    fetchData = () => {\r\n        //In package.json add \"proxy\": \"http://localhost:5000\" \r\n        //This will allow redirect to REST api in Flask w/o CORS errors\r\n         fetch('/example_api')\r\n         .then(\r\n             response => response.json() \r\n             )//The promise response is returned, then we extract the json data\r\n         .then (jsonOutput => //jsonOutput now has result of the data extraction\r\n                  {\r\n                      this.updateData(jsonOutput)\r\n                    }\r\n              )\r\n      }\r\n    componentDidMount(){\r\n        this.fetchData();\r\n    }\r\n\r\n\r\n    render(){\r\n        {/*If the data has not yet been loaded from the server, return empty page */}\r\n        if ( this.state.data == null )\r\n        return (<div>No data</div>)\r\n        else\r\n        {\r\n\r\n        return (\r\n            <div>\r\n                <div><h2>The api response is: {this.state.data}</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MyComponent;"]},"metadata":{},"sourceType":"module"}