{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brendan\\\\Desktop\\\\SWEN344\\\\react-3-bmy3369\\\\src\\\\AllCourses.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Component } from \"react/cjs/react.production.min\";\nimport React from 'react';\nimport { Card, CardHeader, CardBody, Table, Row } from 'reactstrap';\nimport Course from \"./Course\";\n\nclass AllCourses extends Component {\n  constructor() {\n    super();\n\n    this.updateData = apiResponse => {\n      this.setState({\n        data: apiResponse\n      });\n    };\n\n    this.fetchData = () => {\n      //In package.json add \"proxy\": \"http://localhost:5000\"\n      //This will allow redirect to REST api in Flask w/o CORS errors\n      fetch('/coursedata').then(response => response.json()) //The promise response is returned, then we extract the json data\n      .then(jsonOutput => //jsonOutput now has result of the data extraction\n      {\n        this.updateData(jsonOutput);\n      });\n    };\n\n    this.handleUpdate = course => {\n      for (let i = 0; i < this.state.courses.length; i++) {\n        if (this.state.courses[i].name === course.props.name) {\n          let temp = this.state.courses;\n          let updateCourse = temp[i];\n          updateCourse.display = !updateCourse.display;\n          temp[i] = updateCourse;\n          this.setState({\n            courses: temp\n          });\n        }\n      }\n    };\n\n    this.canDisplay = course => {\n      if (course.display === true) {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: course.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: course.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, course.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this);\n      }\n    };\n\n    this.getCard = course => {\n      return /*#__PURE__*/_jsxDEV(Course, {\n        name: course.name,\n        desc: course.desc,\n        details: course.details,\n        display: course.display,\n        handleUpdate: this.handleUpdate\n      }, course.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = {\n      courses: [{\n        name: 'swen-250',\n        desc: 'personal software eng',\n        details: 'C and fun with vi and command line',\n        display: false\n      }, {\n        name: 'swen-331',\n        desc: 'secure software',\n        details: 'Fuzzer - you will love it, you will fear it!',\n        display: false\n      }, {\n        name: 'swen-440',\n        desc: 'system architecture',\n        display: false,\n        details: \"Services?  What what's a service?  I need to do math for metrics?\"\n      }, {\n        name: 'swen-344',\n        desc: 'web engineering',\n        display: false,\n        details: \"You mean web pages, right?  Wait, there's more?\"\n      }]\n    };\n    this.handleUpdate = this.handleUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"m-4\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: \"Courses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: this.state.courses.map(course => this.getCard(course))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"m-4\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: \"Your Selections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Course Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"text-center\",\n              children: this.state.courses.map(course => this.canDisplay(course))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AllCourses;","map":{"version":3,"sources":["C:/Users/Brendan/Desktop/SWEN344/react-3-bmy3369/src/AllCourses.js"],"names":["Component","React","Card","CardHeader","CardBody","Table","Row","Course","AllCourses","constructor","updateData","apiResponse","setState","data","fetchData","fetch","then","response","json","jsonOutput","handleUpdate","course","i","state","courses","length","name","props","temp","updateCourse","display","canDisplay","desc","getCard","details","bind","componentDidMount","render","map"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Component} from \"react/cjs/react.production.min\";\r\nimport React from 'react'\r\nimport {\r\n  Card, CardHeader, CardBody, Table, Row\r\n} from 'reactstrap';\r\nimport Course from \"./Course\";\r\n\r\nclass AllCourses extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            courses: [\r\n                {name: 'swen-250', desc: 'personal software eng',\r\n                    details: 'C and fun with vi and command line', display: false},\r\n                {name: 'swen-331', desc: 'secure software',\r\n                    details: 'Fuzzer - you will love it, you will fear it!', display: false},\r\n                {name: 'swen-440', desc: 'system architecture', display: false,\r\n                    details: \"Services?  What what's a service?  I need to do math for metrics?\"},\r\n                {name: 'swen-344', desc: 'web engineering', display: false,\r\n                    details: \"You mean web pages, right?  Wait, there's more?\"}\r\n            ]\r\n        }\r\n        this.handleUpdate = this.handleUpdate.bind(this)\r\n    }\r\n    updateData = (apiResponse) => {\r\n        this.setState({data: apiResponse})\r\n    }\r\n\r\n    fetchData = () => {\r\n        //In package.json add \"proxy\": \"http://localhost:5000\"\r\n        //This will allow redirect to REST api in Flask w/o CORS errors\r\n         fetch('/coursedata')\r\n         .then(\r\n             response => response.json()\r\n             )//The promise response is returned, then we extract the json data\r\n         .then (jsonOutput => //jsonOutput now has result of the data extraction\r\n                  {\r\n                      this.updateData(jsonOutput)\r\n                    }\r\n              )\r\n      }\r\n    componentDidMount(){\r\n        this.fetchData();\r\n    }\r\n\r\n\r\n\r\n    handleUpdate = (course) => {\r\n        for(let i= 0; i < this.state.courses.length; i++) {\r\n            if (this.state.courses[i].name === course.props.name) {\r\n                let temp = this.state.courses\r\n                let updateCourse = temp[i]\r\n                updateCourse.display = !updateCourse.display;\r\n                temp[i] = updateCourse;\r\n                this.setState({courses: temp});\r\n            }\r\n        }\r\n    }\r\n\r\n     canDisplay = (course) => {\r\n        if (course.display === true) {\r\n            return (<tr key={course.name}>\r\n                       <td>{course.name}</td>\r\n                        <td>{course.desc}</td>\r\n                    </tr>)\r\n        }\r\n     }\r\n     getCard = (course) => {\r\n        return (\r\n            <Course key={course.name} name={course.name} desc={course.desc}\r\n               details={course.details} display={course.display}\r\n               handleUpdate={this.handleUpdate}/>\r\n        )\r\n     }\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n             <Card className=\"m-4\">\r\n                 <CardHeader>Courses</CardHeader>\r\n\r\n                 <CardBody>\r\n                    <Row>\r\n                     {this.state.courses.map((course) => this.getCard(course))}\r\n                    </Row>\r\n                 </CardBody>\r\n             </Card>\r\n             <Card className=\"m-4\">\r\n                <CardHeader>Your Selections</CardHeader>\r\n                 <CardBody>\r\n                    <Table>\r\n                        <thead>\r\n                            <tr className=\"text-center\">\r\n                                <th>Course Name</th>\r\n                                <th>Description</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"text-center\" >\r\n                            {this.state.courses.map((course) => this.canDisplay(course))}\r\n                        </tbody>\r\n                    </Table>\r\n                 </CardBody>\r\n             </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllCourses;"]},"metadata":{},"sourceType":"module"}