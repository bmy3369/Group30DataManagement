{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\corey\\\\Documents\\\\RIT\\\\Group30DataManagement\\\\src\\\\homePackage\\\\UserTools\\\\RequestButton.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Component } from \"react/cjs/react.production.min\";\nimport React from 'react';\nimport { Label, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, ModalFooter, Button } from 'reactstrap';\n/**\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n*/\n\nclass RequestButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n      /*\r\n      if (this.state.modal === false) {Canc\r\n          this.setState({username: \"\"})\r\n           this.setState({requested_tool: \"\"})\r\n           this.setState({tool_owner: \"\"})\r\n           this.setState({date_required: \"\"})\r\n           this.setState({duration: \"\"})\r\n      }\r\n      */\n    };\n\n    this.acceptTool = () => {\n      const data = {\n        username: this.state.username,\n        requested_tool: this.state.requested_tool,\n        tool_owner: this.state.tool_owner,\n        date_required: this.state.date_required,\n        duration: this.state.duration\n      };\n      const reqOptions = {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      const getUrl = '/requestTool/' + this.state.requested_tool + \"/\" + this.state.username + \"/\" + this.state.tool_owner;\n      fetch(getUrl, reqOptions).then(response => response.json()).then(this.fetchData);\n    };\n\n    this.updateProp = event => {\n      if (event.target.id === \"enteredDuration\") {\n        this.setState({\n          duration: event.target.value\n        });\n      } else if (event.target.id === \"enteredDateRequired\") {\n        this.setState({\n          date_required: event.target.value\n        });\n      }\n    };\n\n    this.submitForm = () => {\n      this.acceptTool();\n      this.toggle();\n    };\n\n    this.state = {\n      username: props.username,\n      requested_tool: props.requested_tool,\n      tool_owner: \"bmy\",\n      date_required: \"\",\n      duration: \"\",\n      modal: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"m-2\",\n        color: \"primary\",\n        onClick: this.toggle,\n        children: \"Request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.toggle,\n          children: \"Request this tool?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          className: \"m-4\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: /*#__PURE__*/_jsxDEV(Label, {\n                children: \"This will send a request to (PUT OWNER HERE)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Input number of days being requested:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"enteredDuration\",\n                value: this.state.duration,\n                onChange: this.updateProp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Input what date the tool is needed by:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"enteredDateRequired\",\n                value: this.state.date_required,\n                onChange: this.updateProp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: this.submitForm,\n            children: \"Request Tool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default RequestButton;","map":{"version":3,"sources":["C:/Users/corey/Documents/RIT/Group30DataManagement/src/homePackage/UserTools/RequestButton.js"],"names":["Component","React","Label","Modal","ModalHeader","ModalBody","Form","FormGroup","Input","ModalFooter","Button","RequestButton","constructor","props","toggle","setState","modal","state","acceptTool","data","username","requested_tool","tool_owner","date_required","duration","reqOptions","method","headers","Accept","body","JSON","stringify","getUrl","fetch","then","response","json","fetchData","updateProp","event","target","id","value","submitForm","render"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Component} from \"react/cjs/react.production.min\";\r\nimport React from 'react'\r\nimport {\r\nLabel, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, ModalFooter, Button\r\n} from 'reactstrap'\r\n\r\n/**\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n*/\r\n\r\nclass RequestButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: props.username,\r\n            requested_tool: props.requested_tool,\r\n            tool_owner: \"bmy\",\r\n            date_required: \"\",\r\n            duration: \"\",\r\n            modal: false\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({modal: !this.state.modal})\r\n        /*\r\n        if (this.state.modal === false) {Canc\r\n            this.setState({username: \"\"})\r\n             this.setState({requested_tool: \"\"})\r\n             this.setState({tool_owner: \"\"})\r\n             this.setState({date_required: \"\"})\r\n             this.setState({duration: \"\"})\r\n        }\r\n        */\r\n    }\r\n    acceptTool = () => {\r\n        const data = {\r\n            username: this.state.username,\r\n            requested_tool: this.state.requested_tool,\r\n            tool_owner: this.state.tool_owner,\r\n            date_required: this.state.date_required,\r\n            duration: this.state.duration\r\n        }\r\n        const reqOptions = {\r\n            method: 'POST',\r\n            headers: {Accept:'application/json', 'Content-Type':'application/json'},\r\n            body: JSON.stringify(data)\r\n        }\r\n        const getUrl = '/requestTool/' + this.state.requested_tool + \"/\"\r\n            + this.state.username + \"/\" + this.state.tool_owner\r\n        fetch( getUrl, reqOptions)\r\n            .then(response => response.json())\r\n            .then(\r\n                this.fetchData\r\n            )\r\n    }\r\n    updateProp = (event) => {\r\n        if(event.target.id === \"enteredDuration\") {\r\n            this.setState({duration: event.target.value})\r\n        } else if(event.target.id === \"enteredDateRequired\") {\r\n            this.setState({date_required: event.target.value})\r\n        }\r\n    }\r\n    submitForm = () => {\r\n        this.acceptTool()\r\n        this.toggle()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button className=\"m-2\" color=\"primary\" onClick={this.toggle}>Request</Button>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>Request this tool?</ModalHeader>\r\n                    <ModalBody className={\"m-4\"}>\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <Label>This will send a request to (PUT OWNER HERE)</Label>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Input number of days being requested:</Label>\r\n                                <Input type=\"text\" id=\"enteredDuration\" value={this.state.duration} onChange={this.updateProp}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Input what date the tool is needed by:</Label>\r\n                                <Input type=\"text\" id=\"enteredDateRequired\" value={this.state.date_required} onChange={this.updateProp}/>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.submitForm}>Request Tool</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default RequestButton\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}