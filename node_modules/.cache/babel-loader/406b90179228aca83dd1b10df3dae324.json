{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brendan\\\\Desktop\\\\School Stuff\\\\SPRING2021\\\\datamangement\\\\Group30DataManagement\\\\src\\\\homePackage\\\\UserTools\\\\EditTool.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Component } from \"react/cjs/react.production.min\";\nimport React from 'react';\nimport { Label, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, ModalFooter, Button, ListGroup, ListGroupItem } from 'reactstrap';\nimport EditCategories from \"./EditCategories\";\n\nclass EditTool extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.editTool = () => {\n      const data = {\n        name: this.state.wholeTool[1],\n        description: this.state.wholeTool[2],\n        purchase_date: this.state.wholeTool[3],\n        purchase_price: this.state.wholeTool[4]\n      };\n      const reqOptions = {\n        method: 'PUT',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch('/editTool/' + this.state.wholeTool[0], reqOptions).then(response => response.json());\n    };\n\n    this.updateProp = event => {\n      const args = this.state.wholeTool;\n\n      if (event.target.id === \"enteredName\") {\n        args[1] = event.target.value;\n      } else if (event.target.id === \"enteredDescription\") {\n        args[2] = event.target.value;\n      } else if (event.target.id === \"enteredPurchaseDate\") {\n        args[3] = event.target.value;\n      } else if (event.target.id === \"enteredPurchasePrice\") {\n        args[4] = event.target.value;\n      }\n\n      this.setState({\n        wholeTool: args\n      });\n    };\n\n    this.updateUserInput = event => {\n      this.setState({\n        inputCategory: event.target.value\n      });\n    };\n\n    this.submitForm = () => {\n      this.editTool();\n      this.toggle();\n    };\n\n    this.displayCategories = category => {\n      console.log(this.state.categories);\n      return /*#__PURE__*/_jsxDEV(EditCategories, {\n        category: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this);\n    };\n\n    this.addCategory = () => {\n      let cats = this.state.categories;\n      cats.push(this.state.inputCategory);\n      this.setState({\n        categories: cats\n      });\n      console.log(this.state.categories);\n    };\n\n    this.state = {\n      wholeTool: props.tool,\n      categories: props.categories,\n      modal: false,\n      inputCategory: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"m-2\",\n        color: \"primary\",\n        onClick: this.toggle,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.toggle,\n          children: \"Create New Tool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          className: \"m-4\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Tool Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"enteredName\",\n                value: this.state.wholeTool[1],\n                onChange: this.updateProp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"enteredDescription\",\n                value: this.state.wholeTool[2],\n                onChange: this.updateProp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Purchase Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"enteredPurchaseDate\",\n                value: this.state.wholeTool[3],\n                onChange: this.updateProp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Purchase Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"enteredPurchasePrice\",\n                value: this.state.wholeTool[4],\n                onChange: this.updateProp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Categories:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                children: [this.state.categories.map(category => this.displayCategories(category)), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  id: \"inputText\",\n                  value: this.state.inputCategory,\n                  onChange: this.updateUserInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: this.addCategory,\n                  children: \"Add Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: this.submitForm,\n            children: \"Confirm Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EditTool;","map":{"version":3,"sources":["C:/Users/Brendan/Desktop/School Stuff/SPRING2021/datamangement/Group30DataManagement/src/homePackage/UserTools/EditTool.js"],"names":["Component","React","Label","Modal","ModalHeader","ModalBody","Form","FormGroup","Input","ModalFooter","Button","ListGroup","ListGroupItem","EditCategories","EditTool","constructor","props","toggle","setState","modal","state","editTool","data","name","wholeTool","description","purchase_date","purchase_price","reqOptions","method","headers","Accept","body","JSON","stringify","fetch","then","response","json","updateProp","event","args","target","id","value","updateUserInput","inputCategory","submitForm","displayCategories","category","console","log","categories","addCategory","cats","push","tool","render","map"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Component} from \"react/cjs/react.production.min\";\r\nimport React from 'react'\r\nimport {\r\nLabel, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, ModalFooter, Button, ListGroup, ListGroupItem\r\n} from 'reactstrap'\r\nimport EditCategories from \"./EditCategories\";\r\n\r\nclass EditTool extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            wholeTool: props.tool,\r\n            categories: props.categories,\r\n            modal: false,\r\n            inputCategory: \"\"\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({modal: !this.state.modal});\r\n    }\r\n\r\n    editTool = () => {\r\n        const data = {\r\n            name: this.state.wholeTool[1],\r\n            description: this.state.wholeTool[2],\r\n            purchase_date: this.state.wholeTool[3],\r\n            purchase_price: this.state.wholeTool[4],\r\n        }\r\n        const reqOptions = {\r\n            method: 'PUT',\r\n            headers: {Accept:'application/json', 'Content-Type':'application/json'},\r\n            body: JSON.stringify(data)\r\n        }\r\n        fetch('/editTool/' +this.state.wholeTool[0], reqOptions)\r\n            .then(response => response.json())\r\n    }\r\n\r\n    updateProp = (event) => {\r\n        const args = this.state.wholeTool\r\n        if(event.target.id === \"enteredName\") {\r\n            args[1] = event.target.value\r\n        } else if(event.target.id === \"enteredDescription\") {\r\n             args[2] = event.target.value\r\n        }else if(event.target.id === \"enteredPurchaseDate\") {\r\n             args[3] = event.target.value\r\n        }else if(event.target.id === \"enteredPurchasePrice\") {\r\n             args[4] = event.target.value\r\n        }\r\n        this.setState({wholeTool: args})\r\n    }\r\n    updateUserInput = (event) => {\r\n        this.setState({inputCategory: event.target.value})\r\n    }\r\n    submitForm = () => {\r\n        this.editTool()\r\n        this.toggle()\r\n    }\r\n    displayCategories = (category) => {\r\n        console.log(this.state.categories)\r\n        return (<EditCategories category={category}/>)\r\n    }\r\n    addCategory = () => {\r\n        let cats = this.state.categories\r\n        cats.push(this.state.inputCategory)\r\n        this.setState({categories: cats})\r\n        console.log(this.state.categories)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button className=\"m-2\" color=\"primary\" onClick={this.toggle}>Edit</Button>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>Create New Tool</ModalHeader>\r\n                    <ModalBody className={\"m-4\"}>\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <Label>Tool Name</Label>\r\n                                <Input type=\"text\" id=\"enteredName\" value={this.state.wholeTool[1]} onChange={this.updateProp}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Description</Label>\r\n                                <Input type=\"text\" id=\"enteredDescription\" value={this.state.wholeTool[2]} onChange={this.updateProp}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Purchase Date</Label>\r\n                                <Input type=\"text\" id=\"enteredPurchaseDate\" value={this.state.wholeTool[3]} onChange={this.updateProp}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Purchase Price</Label>\r\n                                <Input type=\"text\" id=\"enteredPurchasePrice\" value={this.state.wholeTool[4]} onChange={this.updateProp}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Categories:</Label>\r\n                                 <ListGroup>\r\n                                    {this.state.categories.map(category => this.displayCategories(category))}\r\n                                    <Input type=\"text\" id=\"inputText\" value={this.state.inputCategory} onChange={this.updateUserInput}/>\r\n                                    <Button onClick={this.addCategory}>Add Category</Button>\r\n                                </ListGroup>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.submitForm}>Confirm Edit</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default EditTool\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}