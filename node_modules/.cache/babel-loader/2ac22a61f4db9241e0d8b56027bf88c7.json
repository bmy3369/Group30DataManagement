{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\corey\\\\Documents\\\\RIT\\\\Group30DataManagement\\\\src\\\\requestsPackage\\\\AcceptTool.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Component } from \"react/cjs/react.production.min\";\nimport React from 'react';\nimport { Label, Modal, ModalHeader, ModalBody, Form, FormGroup, NavLink, Input, ModalFooter, Button } from 'reactstrap';\n/**\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n*/\n\nclass AcceptTool extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n\n      if (this.state.modal === false) {\n        /*this.setState({username: \"\"})*/\n        this.setState({\n          requested_tool: \"\"\n        });\n        /*this.setState({duration_requested: \"\"})\r\n        this.setState({date_required: \"\"})*/\n      }\n    };\n\n    this.acceptTool = () => {\n      const data = {\n        /*username: this.state.username,*/\n        requested_tool: this.state.requested_tool\n        /*duration_requested: this.state.duration_requested,\r\n        date_required: this.state.date_required*/\n\n      };\n      const reqOptions = {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch('/acceptTool/' + this.state.requested_tool, reqOptions).then(response => response.json()).then(this.fetchData);\n    };\n\n    this.updateProp = event => {\n      if (event.target.id === \"enteredReturnDate\") {\n        this.setState({\n          date_required: event.target.value\n        });\n      }\n    };\n\n    this.submitForm = () => {\n      this.acceptTool();\n      this.toggle();\n    };\n\n    this.state = {\n      requestArgs: props.requests,\n\n      /*username: props.user,*/\n      requested_tool: requestArgs[1],\n      date_required: \"\",\n      modal: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"m-2\",\n        color: \"success\",\n        onClick: this.toggle,\n        children: \"Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.toggle,\n          children: \"Accept Request?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          className: \"m-4\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: /*#__PURE__*/_jsxDEV(Label, {\n                children: \"By accepting, you agree to lend this user the specified tool.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Set Return date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"enteredReturnDate\",\n                value: this.state.returnDate,\n                onChange: this.updateProp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            onClick: this.submitForm,\n            children: \"Accept Request\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AcceptTool;","map":{"version":3,"sources":["C:/Users/corey/Documents/RIT/Group30DataManagement/src/requestsPackage/AcceptTool.js"],"names":["Component","React","Label","Modal","ModalHeader","ModalBody","Form","FormGroup","NavLink","Input","ModalFooter","Button","AcceptTool","constructor","props","toggle","setState","modal","state","requested_tool","acceptTool","data","reqOptions","method","headers","Accept","body","JSON","stringify","fetch","then","response","json","fetchData","updateProp","event","target","id","date_required","value","submitForm","requestArgs","requests","render","returnDate"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Component} from \"react/cjs/react.production.min\";\r\nimport React from 'react'\r\nimport {\r\nLabel, Modal, ModalHeader, ModalBody, Form, FormGroup,NavLink, Input, ModalFooter, Button\r\n} from 'reactstrap'\r\n\r\n/**\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n*/\r\n\r\nclass AcceptTool extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            requestArgs: props.requests,\r\n            /*username: props.user,*/\r\n            requested_tool: requestArgs[1],\r\n            date_required: \"\",\r\n            modal: false\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({modal: !this.state.modal});\r\n        if (this.state.modal === false) {\r\n            /*this.setState({username: \"\"})*/\r\n             this.setState({requested_tool: \"\"})\r\n             /*this.setState({duration_requested: \"\"})\r\n             this.setState({date_required: \"\"})*/\r\n        }\r\n    }\r\n    acceptTool = () => {\r\n        const data = {\r\n            /*username: this.state.username,*/\r\n            requested_tool: this.state.requested_tool,\r\n            /*duration_requested: this.state.duration_requested,\r\n            date_required: this.state.date_required*/\r\n        }\r\n        const reqOptions = {\r\n            method: 'POST',\r\n            headers: {Accept:'application/json', 'Content-Type':'application/json'},\r\n            body: JSON.stringify(data)\r\n        }\r\n        fetch('/acceptTool/'+this.state.requested_tool, reqOptions)\r\n            .then(response => response.json())\r\n            .then(\r\n                this.fetchData\r\n            )\r\n    }\r\n    updateProp = (event) => {\r\n        if(event.target.id === \"enteredReturnDate\") {\r\n            this.setState({date_required: event.target.value})\r\n        }\r\n    }\r\n    submitForm = () => {\r\n        this.acceptTool()\r\n        this.toggle()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button className=\"m-2\" color=\"success\" onClick={this.toggle}>Accept</Button>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>Accept Request?</ModalHeader>\r\n                    <ModalBody className={\"m-4\"}>\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <Label>By accepting, you agree to lend this user the specified tool.</Label>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label>Set Return date:</Label>\r\n                                <Input type=\"text\" id=\"enteredReturnDate\" value={this.state.returnDate} onChange={this.updateProp}/>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"success\" onClick={this.submitForm}>Accept Request</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default AcceptTool\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}